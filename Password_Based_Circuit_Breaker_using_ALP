ORG 0000H;
CLR P2.3;CLR
P2.4;
MOV TMOD, #00000001B;ACALL
LCD_INT;
ACALL LINE1;
MOV DPTR, #TEXT1;ACALL
LCD_OUT; ACALL LINE2;
MOV DPTR, #TEXT2;ACALL
LCD_OUT; ACALL DELAY;
ACALL DELAY; SAI1:ACALL
CLRSCR;ACALL LINE1;
MOV DPTR, #TEXT3;ACALL
LCD_OUT; ACALL LINE2;
MOV DPTR, #TEXT4;ACALL
LCD_OUT;
ACALL READ_KEYPRESS1;SJMP
SAI1;
READ_KEYPRESS1:ACALL KEY_SCAN1;RET
KEY_SCAN1:MOV P1, #0FFH;CLR P1.2;
JB P1.4, JUMP1;
ACALL CLRSCR;
ACALL LINE1;
MOV DPTR, #TEXT7;ACALL
LCD_OUT; MOV A, #06H;
ACALL LCD_COMMAND;JB P2.3,
SPRINT1;MOV DPTR, #TEXT6;ACALL
LCD_OUT; SJMP SPRINT2;
SPRINT1:MOV DPTR, #TEXT5;ACALL
LCD_OUT;
SPRINT2:
ACALL LINE2;
MOV DPTR, #TEXT8;ACALL
LCD_OUT; MOV A, #06H;
ACALL LCD_COMMAND;JB P2.4,
SPRINT3;
MOV DPTR, #TEXT6;ACALL
LCD_OUT; SJMP SPRINT4;
SPRINT3:MOV DPTR, #TEXT5;
ACALL LCD_OUT;
SPRINT4:ACALL DELAY; ACALL
DELAY;
ACALL
DELAY;
ACALL DELAY;RET
JUMP1:
JB P1.5, EXIT2; ACALL
READ_LINE;RET
EXIT2:LJMP KEY_SCAN1;
READ_LINE:ACALL CLRSCR;ACALL
LINE1;
MOV DPTR, #TEXT9;ACALL
LCD_OUT;ACALL LINE2;
MOV DPTR, #TEXT0;ACALL
LCD_OUT; ACALL
KEYSCAN3; ACALL DELAY;
RET
KEYSCAN3:MOV P1, #0FFH;CLR P1.2;
JB P1.4, LUMP1;
ACALL READ_KEYPRESS2;ACALL
CLRSCR;
ACALL LINE1;
MOV DPTR, #CHKMSG;ACALL
LCD_OUT; ACALL DELAY;
ACALL CHECK_PASSWORD1;RET
LUMP1:JB P1.5, LUMP2;
ACALL READ_KEYPRESS2;ACALL
CLRSCR;
ACALL LINE1;
MOV DPTR, #CHKMSG;ACALL
LCD_OUT; ACALL DELAY;
ACALL CHECK_PASSWORD2;RET
LUMP2: LJMP KEYSCAN3;
READ_KEYPRESS2:ACALL CLRSCRACALL
LINE1
MOV DPTR,#IPMSGACALL
LCD_OUT ACALL LINE2
MOV R0,#5 MOV
R1,#160
ROTATE:ACALL KEYSCAN2MOV
@R1,AACALL LCD_DATA
ACALL DELAY
INC R1
DJNZ R0,ROTATERET
KEYSCAN2:MOV P1, #0FFH;CLR P1.0;
JB P1.4, NEXT1;
MOV A, #55D;
RET
NEXT1: JB P1.5, NEXT2;MOV A,
#56D;
RET
NEXT2: JB P1.6, NEXT3;MOV A,
#57D;
RET
NEXT3: SETB P1.0;CLR
P1.1;
JB P1.4, NEXT4;
MOV A, #52D;
RET
NEXT4: JB P1.5, NEXT5;MOV A,
#53D;
RET
NEXT5: JB P1.6, NEXT6;MOV A,
#54D;
RET
NEXT6: SETB P1.1;CLR
P1.2;
JB P1.4, NEXT7;MOV A, #49D;
RET
NEXT7: JB P1.5,NEXT8;MOV A,
#50D;
RET
NEXT8: JB P1.6,NEXT9;MOV A,
#51D;
RET
NEXT9: SETB P1.2;CLR
P1.3;
JB P1.5, NEXT10;MOV A,
#48D; RET
NEXT10:LJMP KEYSCAN2;
CHECK_PASSWORD1:MOV R0,#5;MOV R1,#160;
MOV DPTR,#PASSWORD1;RPT:CLR A;
MOVC A,@A+DPTR;XRL
A,@R1;
JNZ FAIL;
INC R1;
INC DPTR;
DJNZ R0,RPT;
ACALL CLRSCR;
ACALL LINE1;
MOV DPTR,#TEXT_S1ACALL
LCD_OUT
JNB P2.3, SUCCESS;CLR
P2.3;SJMP GOBACK; SUCCESS:
SETB P2.3;SJMP GOBACK
FAIL:ACALL CLRSCR ACALL
LINE1
MOV DPTR,#TEXT_F1ACALL
LCD_OUT ACALL DELAY
ACALL LINE2
MOV DPTR,#TEXT_F2ACALL
LCD_OUT ACALL DELAY
GOBACK:RET
SJMP GOBACK1
FAIL1:ACALL CLRSCR
ACALL LINE1
MOV DPTR,#TEXT_F1ACALL
LCD_OUT ACALL DELAY
ACALL LINE2
MOV DPTR,#TEXT_F2ACALL
LCD_OUT ACALL DELAY
GOBACK1:RET
LCD_INT:MOV DPTR, #INIT_COMMANDS;ACALL LCD_IN;
RET
LCD_IN:MOV A,#00H;MOVC A,
@A+DPTR; JZ EXIT0;ACALL LCD_COMMAND;INC
DPTR;
SJMP LCD_IN;EXIT0:
RET
LCD_OUT:MOV A, #00H;MOVC A,
@A+DPTR;
JZ EXIT1;
ACALL LCD_DATA;INC
DPTR;
SJMP LCD_OUT;
EXIT1: RET
LCD_COMMAND: MOV P3,A;CLR P2.0;
CLR P2.1; SETB
P2.2;
ACALL DELAY;
CLR P2.2;
RET
LCD_DATA:MOV P3,A;SETB
P2.0;
CLR P2.1; SETB P2.2;
ACALL DELAY;CLR
P2.2;
RET
CLRSCR:MOV A, #01H; ACALL
LCD_COMMAND;RET
LINE1:MOV A, #80H; ACALL
LCD_COMMAND;RETLINE2:MOV A, #0C0H; ACALL
LCD_COMMAND;RET
DELAY:MOV R2, #250;
LL1:MOV R3, #250;
LL2:DJNZ R3, LL2; DJNZ R2,
LL1;
RET
INIT_COMMANDS: DB 0CH,01H,06H,80H,3CH,0TEXT1: DB
"PASSWORD BASED",0
TEXT2: DB "CIRCUIT BREAKER",0TEXT3: DB
"1) SHOW STATUS", 0
TEXT4: DB "2) CHANGE STATUS", 0TEXT5: DB
"ON", 0
TEXT6: DB "OFF", 0
TEXT7: DB "LINE1 : ", 0TEXT8:
DB "LINE2 : ", 0
TEXT9: DB "1) CHANGE LINE1", 0
TEXT0: DB "2) CHANGE LINE2", 0 IPMSG: DB "ENTER
PASSKEY", 0 CHKMSG: DB "CHECKING PASSKEY", 0
TEXT_S1: DB "STATUS CHANGED",0 TEXT_F1: DB
"WRONG PASSKEY",0 TEXT_F2: DB "ACCESS
DENIED",0
PASSWORD1: DB 49D, 50D, 51D, 52D, 53D, 0
PASSWORD2: DB 48D, 50D, 53D, 56D, 48D, 0
END
